name: Build & Deploy

on:
  push:
    branches:
      - main  # Trigger on push to main
  workflow_dispatch:  # Allow manual runs

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set-tag.outputs.IMAGE_TAG }}  # Pass IMAGE_TAG as output
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set Image Tag
        id: set-tag
        run: |
          IMAGE_TAG=$(date +%Y%m%d%H%M%S)  # Timestamp-based tag
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT  # Store as output

      - name: Build Docker Image
        run: |
          docker build -t secdevopsjourney/my-app-nextjs:$IMAGE_TAG .

      - name: Push Docker Image
        run: |
          docker push secdevopsjourney/my-app-nextjs:$IMAGE_TAG

  update-gitops:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Debug Secret Token
        run: |
          echo "Token length: ${#GH_PAT_GITOPS}"
        env:
          GH_PAT_GITOPS: ${{ secrets.GH_PAT_GITOPS }}

      - name: Checkout GitOps Repository
        uses: actions/checkout@v4
        with:
          repository: aminrj/homelab-terraform-gitops-infra
          token: ${{ secrets.GH_PAT_GITOPS }}  # Use a GitHub PAT if private repo
          persist-credentials: false  # Explicitly disable default GitHub authentication
          ref: main  # Explicitly specify the branch

      - name: Update Image Tag in Deployment
        run: |
          sed -i "s|image: secdevopsjourney/my-app-nextjs:.*|image: secdevopsjourney/my-app-nextjs:${{ needs.build-and-push.outputs.image_tag }}|" apps/nextjs-app/dev/deployment.yaml

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GH_PAT_GITOPS }}  # Use a GitHub PAT if private repo
          commit-message: "Update image to ${{ needs.build-and-push.outputs.image_tag }}"
          branch: "update-image-${{ needs.build-and-push.outputs.image_tag }}"
          title: "Deploy new version ${{ needs.build-and-push.outputs.image_tag }}"
          body: "Auto-generated PR to deploy new image version."
          base: "main"
      #   Uncomment for a completly automated deployment (without PR review)
      # - name: Commit & Push Image Update
      #   run: |
      #     git config --global user.email "ci-bot@example.com"
      #     git config --global user.name "CI Bot"
      #     git add apps/my-app/dev/deployment.yaml
      #     git commit -m "Auto-update image to ${{ env.IMAGE_TAG }}"
      #     git push
